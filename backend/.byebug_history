c
EXIT
C
request.env["HTTP_AUTHORIZATION"]
c
decode_results
exit
Exception
errors
JWT
JWT.decode(token, salt, true, { algorithm: algo })
c
puts JWT.decode(token, salt, true, { algorithm: algo })
JWT.decode(token, salt, true, { algorithm: algo }).error
JWT.decode(token, salt, true, { algorithm: algo }).errors.exception
JWT.decode(token, salt, true, { algorithm: algo }).errors
JWT.decode(token, salt, true, { algorithm: algo })
JWT::DecodeError Exception
error
JWT.decode(token, salt, true, { algorithm: algo })
c
token
c
token
Auth.decode_token(token) === "JWT::DecodeError Exception: Nil JSON web token"
Auth.decode_token(token) == "JWT::DecodeError Exception: Nil JSON web token"
Auth.decode_token(token) == (JWT::DecodeError Exception: Nil JSON web token)
Auth.decode_token(token) == JWT::DecodeError Exception: Nil JSON web token
Auth.decode_token(token)
Auth.decode_token(token).status.message
Auth.decode_token(token).status.messages
Auth.decode_token(token).status.nil?
Auth.decode_token(token).status
token
Auth.decode_token(token)
token
c
token
c
token
c
token
c
Auth.decode_token(bob)
bob = "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjp7Im5hbWUiOiJMb3Vpc2UiLCJpZCI6M319.Q3t3197vzuk7iXlDfuZHXcoM-1lM0-ei_8NZrHL4qMp"
token
Auth.decode_token(bob)
bob
bob = "hello"
token
bob="ojojoajsodjfoajsf;alskjf"
Auth.decode_token(token).true?
Auth.decode_token(token)
token
c
algo
salt
c
JWT.decode(token, Rails.application.credentials.JWT[:AUTH_SECRET], true, { algorithm: Rails.application.credentials.JWT[:AUTH_ALG] })
Rails.application.credentials.JWT[:AUTH_ALG]
Rails.application.credentials.JWT[:AUTH_SECRET]
auth.secret
secret
c
EXIT
C
request.env["HTTP_AUTHORIZATION"]
request.env
request
params
c
params
c
userParams
params
